title: Cars
description: Cars of various makes, model, and classes.
type: flex-objects

# Flex Configuration
config:
  # Administration Configuration
  admin:
    # Admin router (optional)
    router:
      path: "/cars"

    # Admin menu (optional)
    menu:
      list:
        route: "/cars"
        title: Cars
        icon: fa-car
        # Authorization to collection admin
        authorize: ["admin.cars.list", "admin.super"]
        # Priority -10 .. 10 (highesgitt goes up)
        priority: 0

    # Admin template type / folder
    template: default

    # Permissions
    permissions:
      # Primary permissions
      admin.reported:
        type: crudpl
        label: Cars

    # List view
    list:
      title: model
      fields:
        make:
        model:
        class:

    # Edit View
    edit:
      title:
        template: "{{ object.model ?? 'Model' }}"

    # Preview View
    preview:
      enabled: false
      route:
        #template: '/plugins/flex-objects/directory:cars'

    # Data Export
    export:
      enabled: true
      method: "jsonSerialize"
      formatter:
        class: 'Grav\Framework\File\Formatter\YamlFormatter'
      filename: "cars"

  # Site Configuration
  site:
    templates:
      collection:
        # Lookup for the template layout files for collections of objects
        paths:
          - "flex/{TYPE}/collection/{LAYOUT}{EXT}"
      object:
        # Lookup for the template layout files for objects
        paths:
          - "flex/{TYPE}/object/{LAYOUT}{EXT}"
      defaults:
        # Default template {TYPE}; overridden by filename of this blueprint if template folder exists
        type: cars
        # Default template {LAYOUT}; can be overridden in render calls (usually Twig in templates)
        layout: default

  # Data Configuration
  data:
    # Object class to be used, allowing custom methods for the object
    object: 'Grav\Common\Flex\Types\Generic\GenericObject'
    # Collection class to be used, allowing custom methods for the collections
    collection: 'Grav\Common\Flex\Types\Generic\GenericCollection'
    # Index class to be used, works as a quick database-like lookup index
    index: 'Grav\Common\Flex\Types\Generic\GenericIndex'
    storage:
        class: 'Grav\Framework\Flex\Storage\SimpleStorage'
        options:
          formatter:
            class: 'Grav\Framework\File\Formatter\JsonFormatter'
          folder: user-data://flex-objects/cars.json
    ordering:
      make: ASC
    search:
      # Search options
      options:
        contains: 1
      # Fields to be searched
      fields:
        - make
        - model
        - class


form:
  validation: loose

  fields:
    make:
      type: select
      size: long
      classes: fancy
      label: Make
      options:
          honda:
            value: 'Honda'
          toyota:
            value: 'Toyota'

    model:
      type: text
      label: Model
      classes: fancy

    class:
      type: select
      size: long
      classes: fancy
      label: Make
      options:
          suv:
            value: 'SUV'
          compact:
            value: 'Compact'
          subcompact:
            value: 'Subcompact'